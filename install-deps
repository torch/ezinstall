#!/usr/bin/env bash

######################################################################
# This script installs required dependencies for Torch7
######################################################################

install_openblas() {
    # Get and build OpenBlas (Torch is much better with a decent Blas)
    cd /tmp/
    git clone https://github.com/xianyi/OpenBLAS.git
    cd OpenBLAS
    if [ $(getconf _NPROCESSORS_ONLN) = 1 ]; then
        make NO_AFFINITY=1 USE_OPENMP=0 USE_THREAD=0
    else
        make NO_AFFINITY=1 USE_OPENMP=1
    fi
    RET=$?; 
    if [ $RET -ne 0 ]; then
        echo "Error. OpenBLAS could not be compiled";
        exit $RET;
    fi
    sudo make install
    RET=$?; 
    if [ $RET -ne 0 ]; then
        echo "Error. OpenBLAS could not be installed";
        exit $RET;
    fi
}

# Based on Platform:
if [[ `uname` == 'Darwin' ]]; then
    # GCC?
    if [[ `which gcc` == '' ]]; then
        echo "MacOS doesn't come with GCC: please install XCode and the command line tools."
        exit
    fi

    # Install Homebrew (pkg manager):
    if [[ `which brew` == '' ]]; then
        ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi

    # Install dependencies:
    brew update
    for pkg in git readline cmake wget qt libjpeg jpeg imagemagick zeromq graphicsmagick caskroom/cask/brew-cask; do
        if brew list -1 | grep -q "^${pkg}\$"; then
            brew uninstall --force $pkg
        fi
        brew install --force $pkg
    done

    brew cask install --force xquartz
    brew remove gnuplot
    brew install gnuplot --with-wxmac --with-cairo --with-pdflib-lite --with-x11 --without-lua

elif [[ `uname` == 'Linux' ]]; then

    # Detect fedora
    grep -q "ID=fedora" /etc/os-release &> /dev/null
    if [[ "x$?" == "x0" ]]; then
        fedora_major_version=`grep VERSION_ID /etc/os-release |cut -f2 -d"="`
        distribution="fedora"
    elif [[ `which apt-get` != '' ]]; then
        export DEBIAN_FRONTEND=noninteractive
        distribution="ubuntu"
        ubuntu_major_version=`lsb_release -a 2>&1|grep Release|cut -f2 -d":"|sed '/^$/d;s/[[:blank:]]//g' |cut -f1 -d'.'`
    elif [[ "$(grep 'ID="centos"' /etc/os-release 2>/dev/null)" != "" ]]; then
        distribution="centos"
        centos_major_version=`grep VERSION_ID /etc/os-release | cut -f2 -d"=" | sed 's/"//g'`
    else
        echo '==> Only Ubuntu, Fedora and CentOS distributions are supported.'
        exit
    fi

    # Install dependencies for Torch:
    if [[ $distribution == 'ubuntu' ]]; then
        if [[ $ubuntu_major_version == '14' ]]; then
            echo '==> Found Ubuntu version 14.xx, installing dependencies'
            sudo apt-get update
            sudo apt-get -y install python-software-properties
            sudo apt-get -y install software-properties-common
            sudo apt-get update
            sudo apt-get install -y build-essential
            sudo apt-get install -y gcc g++
            sudo apt-get install -y cmake
            sudo apt-get install -y curl
            sudo apt-get install -y libreadline-dev
            sudo apt-get install -y git-core
            sudo apt-get install -y libqt4-core libqt4-gui libqt4-dev
            sudo apt-get install -y libjpeg-dev
            sudo apt-get install -y libpng-dev
            sudo apt-get install -y ncurses-dev
            sudo apt-get install -y imagemagick
            sudo apt-get install -y libzmq3-dev
            sudo apt-get install -y gfortran
            sudo apt-get install -y unzip
            sudo apt-get install -y gnuplot
            sudo apt-get install -y gnuplot-x11
            sudo apt-get install -y libsdl2-dev
            sudo apt-get install -y libgraphicsmagick1-dev
            sudo apt-get install -y nodejs
            sudo apt-get install -y npm
            sudo apt-get install -y libfftw3-dev sox libsox-dev libsox-fmt-all
            sudo apt-get update
        else
            sudo apt-get install -y python-software-properties
            sudo add-apt-repository ppa:chris-lea/zeromq
            sudo add-apt-repository ppa:chris-lea/node.js
            sudo apt-get update
            sudo apt-get install -y build-essential
            sudo apt-get install -y gcc g++
            sudo apt-get install -y cmake
            sudo apt-get install -y curl
            sudo apt-get install -y libreadline-dev
            sudo apt-get install -y git-core
            sudo apt-get install -y libqt4-core libqt4-gui libqt4-dev
            sudo apt-get install -y libjpeg-dev
            sudo apt-get install -y libpng-dev
            sudo apt-get install -y ncurses-dev
            sudo apt-get install -y imagemagick
            sudo apt-get install -y libzmq3-dev
            sudo apt-get install -y gfortran
            sudo apt-get install -y unzip
            sudo apt-get install -y gnuplot
            sudo apt-get install -y gnuplot-x11
        fi

        install_openblas

    elif [[ $distribution == 'fedora' ]]; then
        if [[ $fedora_major_version == '20' ]]; then
            sudo yum install -y cmake curl readline-devel ncurses-devel \
                                gcc-c++ gcc-gfortran git gnuplot unzip \
                                nodejs npm libjpeg-turbo-devel libpng-devel \
                                ImageMagick GraphicsMagick-devel fftw-devel \
                                sox-devel sox SDL2-devel zeromq3-devel \
                                qt-devel qtwebkit-devel sox-plugins-freeworld
            install_openblas
        else
            echo "Only Fedora 20 is supported for now, aborting."
            exit
        fi
    elif [[ $distribution == 'centos' ]]; then
        if [[ $centos_major_version == '7' ]]; then
            sudo yum install -y cmake curl readline-devel ncurses-devel \
                                gcc-c++ gcc-gfortran git gnuplot unzip \
                                nodejs npm libjpeg-turbo-devel libpng-devel \
                                ImageMagick GraphicsMagick-devel fftw-devel \
                                sox-devel sox SDL2-devel zeromq3-devel \
                                qt-devel qtwebkit-devel sox-plugins-freeworld
            install_openblas
        else
            echo "Only CentOS 7 is supported for now, aborting."
            exit
        fi
    fi

else
    # Unsupported
    echo '==> platform not supported, aborting'
    exit
fi

# Done.
echo "==> Torch7's dependencies have been installed"
